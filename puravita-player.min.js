/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/app/puravita-utils.ts":
/*!***********************************!*\
  !*** ./src/app/puravita-utils.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "playPause": () => (/* binding */ playPause),
/* harmony export */   "progress": () => (/* binding */ progress),
/* harmony export */   "setProgressPercentage": () => (/* binding */ setProgressPercentage),
/* harmony export */   "setProgressBufferPercentage": () => (/* binding */ setProgressBufferPercentage),
/* harmony export */   "countTime": () => (/* binding */ countTime),
/* harmony export */   "canPlay": () => (/* binding */ canPlay),
/* harmony export */   "volume": () => (/* binding */ volume),
/* harmony export */   "controlInputsToggle": () => (/* binding */ controlInputsToggle),
/* harmony export */   "playrate": () => (/* binding */ playrate),
/* harmony export */   "sidebarToggle": () => (/* binding */ sidebarToggle),
/* harmony export */   "progressInteration": () => (/* binding */ progressInteration),
/* harmony export */   "blurSvgShow": () => (/* binding */ blurSvgShow),
/* harmony export */   "showSubtitleConfig": () => (/* binding */ showSubtitleConfig)
/* harmony export */ });
var inputClose = function (input, inputs) {
    inputs.forEach(function (v) {
        if (v != input) {
            v.checked = false;
        }
    });
};
var controlInputsToggle = function (player) {
    var inputs = player.querySelectorAll('input[type="checkbox"]');
    var labels = player.querySelectorAll('label');
    document.addEventListener('click', function () {
        inputs.forEach(function (v) {
            v.checked = false;
        });
    });
    labels.forEach(function (label) {
        label.addEventListener('click', function (e) {
            e.cancelBubble = true;
            e.stopPropagation();
        });
    });
    inputs.forEach(function (input) {
        input.addEventListener('click', function (e) {
            e.cancelBubble = true;
            e.stopPropagation();
            if (input.checked && !input.classList.contains('js-inative')) {
                inputClose(input, inputs);
            }
        });
    });
};
var playPause = function (video, button) {
    video.addEventListener('pause', function () {
        video.classList.remove('puravita-play');
    });
    video.addEventListener('ended', function () {
        video.classList.remove('puravita-play');
    });
    video.addEventListener('play', function () {
        video.classList.add('puravita-play');
    });
    button.addEventListener('click', function () {
        if (video.classList.contains('puravita-play')) {
            video.pause();
        }
        else {
            video.play();
        }
    }, false);
};
var setProgressBufferPercentage = function (video, progressbarbuffer) {
    video.addEventListener('progress', function () {
        if (video.duration > 0) {
            for (var i = 0; i < video.buffered.length; i++) {
                if (video.buffered.start(video.buffered.length - 1 - i) < video.currentTime) {
                    progressbarbuffer.style.width = (video.buffered.end(video.buffered.length - 1 - i) / video.duration) * 100 + "%";
                    break;
                }
            }
        }
    }, false);
};
var setProgressPercentage = function (progressbar, video, currentTime) {
    var percentage = currentTime / (video.duration * 0.01);
    var width = percentage.toFixed(6) + "%";
    progressbar.style.width = width;
};
var progress = function (video, progressbar, time) {
    var timeInterval = false;
    video.addEventListener('play', function () {
        timeInterval = setInterval(function () {
            setProgressPercentage(progressbar, video, video.currentTime);
            countTime(time, video.currentTime, video.duration);
        });
    });
    video.addEventListener('pause', function () {
        if (timeInterval) {
            clearInterval(timeInterval);
            timeInterval = false;
        }
    });
    video.addEventListener('ended', function () {
        if (timeInterval) {
            clearInterval(timeInterval);
            timeInterval = false;
        }
    });
};
var countTime = function (time, currentTime, durationTime) {
    if (!durationTime)
        return;
    var timenumber = durationTime - currentTime;
    var sec_num = parseInt(timenumber.toString(), 10);
    var hours = Math.floor(sec_num / 3600);
    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);
    var seconds = sec_num - (hours * 3600) - (minutes * 60);
    if (hours < 10) {
        hours = "0" + hours;
    }
    if (minutes < 10) {
        minutes = "0" + minutes;
    }
    if (seconds < 10) {
        seconds = "0" + seconds;
    }
    time.innerText = hours + ":" + minutes + ":" + seconds;
};
var canPlay = function (video, callback) {
    if (callback === void 0) { callback = function () { }; }
    video.addEventListener('canplay', function () {
        callback();
    });
};
var volume = function (video, input) {
    video.volume = parseFloat(input.value);
    input.addEventListener('change', function () {
        video.volume = parseFloat(input.value);
    });
};
var playrate = function (label, list, video) {
    list.querySelectorAll('li').forEach(function (li) {
        li.querySelector('label').addEventListener('click', function (e) {
            var value = parseFloat(e.target.getAttribute('data-value'));
            video.playbackRate = value;
            label.innerText = e.target.getAttribute('data-value') + "x";
        });
    });
};
var sidebarToggle = function (video, button, sidebar, controller) {
    var isShow = false;
    button.addEventListener('click', function () {
        if (isShow) {
            isShow = false;
            sidebar.classList.remove('puravita-chat-sidebar-show');
            controller.classList.remove('puravita-controller-sidebar');
        }
        else {
            isShow = true;
            video.pause();
            sidebar.classList.add('puravita-chat-sidebar-show');
            controller.classList.add('puravita-controller-sidebar');
        }
    }, false);
};
var progressInteration = function (video, progressel, progressbar, time) {
    var mousemove = false;
    progressel.addEventListener('mouseout', function () {
        mousemove = false;
        progressel.style.zIndex = '4';
    });
    progressel.addEventListener('mousedown', function () {
        mousemove = true;
        progressel.style.zIndex = '9';
    });
    progressel.addEventListener('mouseup', function () {
        mousemove = false;
        progressel.style.zIndex = '4';
    });
    progressel.addEventListener('mousemove', function (e) {
        if (!mousemove)
            return;
        video.pause();
        var width = progressel.getClientRects()[0].width;
        var layerX = e.layerX;
        var percentage = layerX / (width * 0.01);
        var duration = video.duration;
        var minuteSet = (duration * 0.01) * percentage;
        setProgressPercentage(progressbar, video, minuteSet);
        video.currentTime = minuteSet;
        countTime(time, video.currentTime, duration);
    });
    progressel.addEventListener('click', function (e) {
        var width = progressel.getClientRects()[0].width;
        var layerX = e.layerX;
        var percentage = layerX / (width * 0.01);
        var duration = video.duration;
        var minuteSet = (duration * 0.01) * percentage;
        setProgressPercentage(progressbar, video, minuteSet);
        video.currentTime = minuteSet;
        countTime(time, video.currentTime, duration);
    });
};
var blurSvgShow = function (video, svg, theCanvas) {
    var cropFrame = function () {
        theCanvas.width = video.getClientRects()[0].width;
        theCanvas.height = video.getClientRects()[0].height;
        var ctx = theCanvas.getContext('2d');
        ctx.drawImage(video, 0, 0, theCanvas.width, theCanvas.height);
        var image = svg.querySelector('image');
        image.setAttribute('xlink:href', theCanvas.toDataURL());
    };
    video.addEventListener('pause', function () {
        cropFrame();
    });
    video.addEventListener('play', function () {
        cropFrame();
    });
    cropFrame();
};
var showSubtitleConfig = function (video, buttonToggleShow, boxTarget) {
    buttonToggleShow.addEventListener('click', function () {
        video.pause();
        if (buttonToggleShow.classList.contains('is-active')) {
            buttonToggleShow.classList.remove('is-active');
            // boxTarget.style.visibility = 'hidden';
            boxTarget.style.zIndex = '4';
            boxTarget.classList.add('puravita-canvas_animation_hide');
        }
        else {
            buttonToggleShow.classList.add('is-active');
            boxTarget.style.zIndex = '9';
            boxTarget.classList.remove('puravita-canvas_animation_hide');
        }
    });
};



/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!************************************!*\
  !*** ./src/app/puravita-player.ts ***!
  \************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _puravita_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./puravita-utils */ "./src/app/puravita-utils.ts");

window.addEventListener('load', function () {
    var player = document.getElementById('puravita-player');
    var video = document.getElementById('video-puravita');
    var buttonPlay = document.getElementById('play-puravita');
    var progressel = document.getElementById('puravita-progress');
    var progressbar = document.getElementById('puravita-progressbar');
    var progressbuffer = document.getElementById('puravita-progressbuffer');
    var timenumber = document.getElementById('puravita-time');
    var volumeinput = document.getElementById('puravita-volume');
    var playratelist = document.getElementById('puravita-rate-list');
    var playratelabel = document.getElementById('puravita-rate-label');
    var sidebarbutton = document.getElementById('puravita-sidebar-button');
    var sidebar = document.getElementById('puravita-sidebar');
    var controller = document.getElementById('puravita-controller');
    var svgBlurBox = document.getElementById('puravita-box-blur');
    var svgBlurBoxSVG = document.getElementById('puravita-box-blur-svg');
    var subtitleButton = document.getElementById('button-subtitle-trigger');
    var theCanvas = document.getElementById('the-canvas');
    (0,_puravita_utils__WEBPACK_IMPORTED_MODULE_0__.playrate)(playratelabel, playratelist, video);
    (0,_puravita_utils__WEBPACK_IMPORTED_MODULE_0__.controlInputsToggle)(player);
    (0,_puravita_utils__WEBPACK_IMPORTED_MODULE_0__.progress)(video, progressbar, timenumber);
    (0,_puravita_utils__WEBPACK_IMPORTED_MODULE_0__.setProgressBufferPercentage)(video, progressbuffer);
    (0,_puravita_utils__WEBPACK_IMPORTED_MODULE_0__.playPause)(video, buttonPlay);
    (0,_puravita_utils__WEBPACK_IMPORTED_MODULE_0__.countTime)(timenumber, 0, video.duration);
    (0,_puravita_utils__WEBPACK_IMPORTED_MODULE_0__.volume)(video, volumeinput);
    (0,_puravita_utils__WEBPACK_IMPORTED_MODULE_0__.sidebarToggle)(video, sidebarbutton, sidebar, controller);
    (0,_puravita_utils__WEBPACK_IMPORTED_MODULE_0__.progressInteration)(video, progressel, progressbar, timenumber);
    (0,_puravita_utils__WEBPACK_IMPORTED_MODULE_0__.blurSvgShow)(video, svgBlurBoxSVG, theCanvas);
    (0,_puravita_utils__WEBPACK_IMPORTED_MODULE_0__.showSubtitleConfig)(video, subtitleButton, svgBlurBox);
    (0,_puravita_utils__WEBPACK_IMPORTED_MODULE_0__.canPlay)(video, function () {
        (0,_puravita_utils__WEBPACK_IMPORTED_MODULE_0__.countTime)(timenumber, video.currentTime, video.duration);
    });
}, false);

})();

/******/ })()
;
//# sourceMappingURL=puravita-player.min.js.map